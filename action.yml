name: "Node build an deploy"
description: "Node build an deploy"
inputs:
  type:
    description: "branch, release"
    required: true
  nexus-user:
    description: "npm user"
    required: true
  nexus-pass:
    description: "npm password"
    required: true
  sonar-token:
    description: "sonar token"
    required: true
  image-name:
    description: "Name of image to deploy"
    required: true
  github-token:
    description: "Github token"
    required: true
  nexusiq-username:
    description: "nexusiq-username"
    required: true
  nexusiq-password:
    description: "nexusiq-password"
    required: true
  nexusiq-applicationid:
    description: "nexusiq-applicationid"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v2
      with:
        cache: "npm"
        node-version: "16.x"
    - name: Hent versjon fra branch
      id: version
      uses: skatteetaten-it/mvn-composite-action/version@v1
      with:
        type: ${{ inputs.type }}
    - name: encode nexus pass
      id: prep
      run: |
        NEXUS_PASS=`echo -n ${{ inputs.nexus-pass }} | base64`
        echo ::add-mask::$NEXUS_PASS
        echo ::set-output name=NEXUS_PASS::$NEXUS_PASS
      shell: bash
    - name: create .npmrc for nexus
      run: cp ${{ github.action_path }}/.npmrc .npmrc
      shell: bash
    - run: npm install
      shell: bash
      env:
        NEXUS_USERNAME: ${{ inputs.nexus-user }}
        NEXUS_PASSWORD: ${{ steps.prep.outputs.NEXUS_PASS }}

    - name: Run the tests and generate coverage report
      env:
        NEXUS_USERNAME: ${{ inputs.nexus-user }}
        NEXUS_PASSWORD: ${{ steps.prep.outputs.NEXUS_PASS }}
      run: npm run test:coverage
      shell: bash
    - name: Run the tests and generate coverage report
      env:
        NEXUS_USERNAME: ${{ inputs.nexus-user }}
        NEXUS_PASSWORD: ${{ steps.prep.outputs.NEXUS_PASS }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
      run: npm run sonarqube
      shell: bash
    - name: Nexus IQ Policy Evaluation
      if: contains(github.ref, '/dependabot/') != true
      uses: sonatype-nexus-community/iq-github-action@1.1.0
      with:
        serverUrl: https://iq.aurora.skead.no/
        username: ${{ inputs.nexusiq-username }}
        password: ${{ inputs.nexusiq-password }}
        applicationId: ${{ inputs.nexusiq-applicationid }}
        stage: ${{ inputs.type == 'release' && 'Release' || 'Build' }}
        target: ./package-lock.json

    - run: npm run build
      shell: bash
      env:
        NEXUS_USERNAME: ${{ inputs.nexus-user }}
        NEXUS_PASSWORD: ${{ steps.prep.outputs.NEXUS_PASS }}

    - id: setup-pack
      uses: buildpacks/github-actions/setup-pack@v4.1.0

    - name: build-pack
      run: pack build ${{ inputs.image-name }}:${{ steps.version.outputs.version }} --builder paketobuildpacks/builder:full  --buildpack gcr.io/paketo-buildpacks/nginx
      shell: bash

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.github-token }}

    - name: "Docker push"
      run: |
        docker push ${{ inputs.image-name }}:${{ steps.version.outputs.version }}
      shell: bash
